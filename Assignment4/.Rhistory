install.packages("ape")
install.packages("phangorn")
install.packages("picante")
require(ape)
require(phangorn)
install.packages("phangorn")
source("http://bioconductor.org/bioLite.R")
install.packages("ape")
install.packages("phangorn")
require(ape)
require(phangorn)
x<-read.dna("mustelid_coI.fasta",format="fasta")
d<-dist.dna(x)
write.table(as.matrix(d),"distances.csv")
d
d2<-dist.dna(x, model="GTR")
tr.upgma<-upgma(d)
plot(tr.upgma)
tr.upgmar<-root(tr.upgma, outgroup="Melursus/1-601 urinus")
plot(tr.upgmar);nodelabels();add.scale.bar(length=0.001)
plot(tr.upgma,"f")
tr.nj<-nj(d)
plot(tr.nj)
plot(tr.nj,"p")
plot(tr.nj,"f")
plot(tr.nj,"p")
par(mfrow=c(1,2))
plot(tr.upgma,"f")
plot(tr.nj,"p")
par(mfrow=c(1,1))
dt.upgma<-cophentic(tr.upgma)
dt.upgma<-cophenetic(tr.upgma)
dmat<-as.matrix(d)
nms<-rownames(dmat)
dt.upgma<-dt.upgma[nms, nms]
d
dt.upgma<-as.dist(dt.upgma)
plot(dt.upgma-d,ylab="residuals", cex=0.5,main="UPGMA")
abline(h=0,lty=3)
tr.fast<-fastme.bal(d,nni=T,spr=T,tbr=T)
plot(tr.fast)
par(mfrow=c(2,2))
plot(tr.nj)
plot(tr.bionj)
plot.phylo(tr.bionj)
fit<-pml(tr.upgma,as.phyDat(x))
fit=optim.pml(fit,T)
plot(fit)
par(mfrow=c(1,1))
plot(fit)
set.seed(8)
bs<-bootstrap.pml(fit,bs=100,optNni=T)
treeBS<-plotBS(fit$tree, type="fan", bs)
treeBS<-plotBS(fit$tree, type="p", bs)
mt<-modelTest(as.phyDat(x),G=F,I=F)
dhky<-dist.dna(x,model="GTR")
orig<-evol.distinct(tr.upgma,type="fair.proportion")
orig
orig<-evol.distinct(tr.upgma,type="fair.proportion")orig
plot(tr.fast)
par(mfrow=c(2,2))
par(mar=rep(1,4))
plot(tr.upgma,"f")
plot(dt.upgma-d,ylab="residuals", cex=0.5,main="UPGMA")
plot(tr.fast)
plot.phylo(tr.bionj)
plot(tr.bionj)
plot(tr.nj)
plot(fit)
treeBS<-plotBS(fit$tree, type="fan", bs)
treeBS<-plotBS(fit$tree, type="p", bs)
View(mt)
View(dmat)
par(mfrow=c(1,1))
par(mar=rep(1,1))
plot(dt.upgma-d,ylab="residuals", cex=0.5,main="UPGMA")
source("http://bioconductor.org/biocLite.R")
biocLite(c("affy", "limma"))
library(GEOquery)
library(affy) #Affymetrix pre-processing
library(hgu133plus2.db)
library(annotate)
library(limma) #Two-colour pre-processing; differential expression
workingDir="/homes/rnmaconeghy/BS32010/Project/GCOS_Cel"
filenames <- c("ROS1-_9.CEL", "ROS1+_10.CEL", "ROS2-_11.CEL", "ROS2+_12.CEL", "ROS3-_13.CEL", "ROS3+_14", "ROS4-_15", "ROS4+_16")
samplenames <- c("ROS1-_9.CEL", "ROS1+_10.CEL", "ROS2-_11.CEL", "ROS2+_12.CEL", "ROS3-_13.CEL", "ROS3+_14", "ROS4-_15", "ROS4+_16")
targets <- c("minus", "plus", "minus", "plus", "minus", "plus", "minus", "plus")
#import data, describing the experimental design
phenodata<-as.data.frame(cbind(filenames,samplenames,targets))
#write.table(phenodata,paste(workingDir,))
celRAW <- ReadAffy(celfile.path=workingDir, phenoData=phenodata)
celfiles <- system.file("extdata", package = "arrays")
eset <- justRMA(phenoData = phenoData, celfile.path = celfiles)
.plotDensity <- function(exps, filename)
]
.plotDensity <- function(exps, filename)
{
pdf(filename)
d <- apply(exps,2,
function(x){
density(x)
})
xmax <- max(sapply(d,function(x)max(x$x)))
xmin <- min(sapply(d,function(x)min(x$x)))
ymax <- max(sapply(d,function(x)max(x$y)))
plot(0,pch='',ylab='',xlab='',
xlim=c(xmin,round(xmax+1)),ylim=c(0,ymax))
lapply(1:length(d),function(x) lines(d[[x]],col=x))
dev.off()
}
install.packages("ape")
install.packages("phangorn")
require(ape)
require(phangorn)
setwd("~/BS32010/Assignment4")
x<-read.dna("mustelid_coI.fasta",format="fasta")
d<-dist.dna(x)
write.table(as.matrix(d),"distances.csv")
tr.upgma<-upgma(d)
plot(tr.upgma)
tr.upgmar<-root(tr.upgma, outgroup="Melursus/1-601 urinus")
#Error in if (newroot ==ROOT) { : argument is of length zero
plot(tr.upgmar);nodelabels();add.scale.bar(length=0.001)
plot(tr.upgma,"f")
tr.nj<-nj(d)
plot(tr.nj)
par(mfrow=c(1,2))
plot(tr.nj,"f")
plot(tr.nj,"p")
par(mfrow=c(1,1))
dt.upgma<-cophenetic(tr.upgma)
dmat<-as.matrix(d)
nms<-rownames(dmat)
dt.upgma<-dt.upgma[nms, nms]
dt.upgma<-as.dist(dt.upgma)
plot(dt.upgma-d,ylab="residuals", cex=0.5,main="UPGMA")
abline(h=0,lty=3)
tr.fast<-fastme.bal(d,nni=T,spr=T,tbr=T)
plot(tr.fast)
par(mfrow=c(2,2))
plot(tr.nj)
fit<-pml(tr.upgma,as.phyDat(x))
fitGTR<-pml(tr.upgma, as.phyDat(x),k=4,inv=0.2)
fit=optim.pml(fit,T)
par(mfrow=c(1,1))
plot(fit)
set.seed(8)
bs<-bootstrap.pml(fit,bs=100,optNni=T)
x<-read.dna("mustelid_coI.db.fasta",format="fasta")
x<-read.dna("mustelid_coI_db.fasta",format="fasta")
d<-dist.dna(x)
write.table(as.matrix(d),"distances.csv")
tr.upgma<-upgma(d)
plot(tr.upgma)
tr.upgmar<-root(tr.upgma, outgroup="Melursus/1-601 urinus")
